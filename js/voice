recognizing = false
var start_timestamp
var ignore_onend
if(!('webkitSpeechRecognition' in window)){
	upgrade();
}else{
	var recognition = new webkitSpeechRecognition();
	recognition.continuous = true
	recognition.interimResults = true
	recognition.onstart = function(){
		recognizing = true
	}
	recognition.onerror = function(event){
		if(event.error == 'no-speech'){
		
		}
		if(event.error == 'audio-capture'){
			showInfo('info_no_microphone');
		}
		if(event.error == 'not_allowed'){
			if(event.timeStamp - start_timestamp < 100){
				showInfo('info_blocked')
			}
			else{
				showInfo('info_denied')
			}
		}
		ignore_onend = true
	}
	recognition.onend = function(){
		recognizing = false
		if(ignore_onend){
			return
		}
		if(!final_transcript){
			showInfo('info_start')
			return
		}
		showInfo('')
		if(window.getSelection){
			window.getSelection().removeAllRanges()
			var range = document.createRange()
			range.selectNode(document.getElementById('final_span'))
			window.getSelection().addRange(range)
		}
	}
	recognition.onresult = function(event){
		var interim_transcript = '',
		for(var i=event.resultIndex; i<event.results.length;++i){
			if(event.results[i]).isFinal){
				final_transcript += event.results[i][0].transcript
			}
			else{
				interim_transcript+=event.results[i][0].transcript
			}
		}
		final_transcript = capitalize(final_transcript)
		final_span.innerHTML = linebreak(final_transcript)
		interim_span.innerHTML = linebreak(interim_transcript)
	}
	function upgrade(){
		showInfo('info_upgrade')
	}
	
	var two_line = /\n\n/g
	var one_line = /\n\n/g
	function linebreak(s){
		return s.replace(two_line, <p></p>).replace(one_line, '<br>')
	}

	var first_char = /\S/
	function capitalize(s){
		return s.replace(first_char, function(m){ return m.toUpperCase()})
	}

	function showInfo(s){
		if(s){
			for(var child = info.firstChild; child; child = child.nextSibling){
				if(child.style){
					child.style.display = child.id == s ? 'inline' : 'none'
				}
			}
			info.style.visibility = 'visible'
		}
		else{
			info.style.visibility = 'hidden'
		}
	}

	final_transcript = '';
	recognition.lang = 'en-IN'
	recognition.start()
	ignore_onend = false
	final_span.innerHTML = ''
	interim_span.innerHTML = ''
	showInfo('info_allow')
}
